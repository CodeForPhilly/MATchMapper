{"version":3,"sources":["components/FilterOption.js","components/FilterGroup.js","components/FilterBar.js","images/MM_infinity-logo_luxwhite_labeled.png","components/NavBar.js","components/TableCell.js","pages/table.js","components/Map.js","pages/map.js","App.js","reportWebVitals.js","index.js"],"names":["FilterOption","props","render","bind","state","toggleState","toggleAffirmative","toggleNegative","getValue","clear","newState","this","applyFilters","console","log","affirmativeValue","negativeValue","className","label","onClick","Component","FilterGroup","filters","ref","current","name","map","filter","FilterBar","filterGroups","keyword","sortKeys","sortDirection","setDirection","setSorting","handleKeyDown","raw_filter_rows","table_filters_raw","split","slice","row","push","filtersByGroup","React","createRef","sortedFilterGroupNames","sort","a","b","includes","sortedFilterGroups","setState","keys","direction","e","target","value","key","id","type","placeholder","onKeyDown","children","showSort","defaultValue","onChange","disabled","hidden","group","NavBar","href","style","backgroundImage","logo","TableCell","visibility","column_name","substring","sticking","top","left","isHeader","TablePage","table_info","display_name","display_cols","update_recency","isLoaded","tableScroll","x","y","column_visibility","col_FACILITY","col_TELEHEALTH","col_PHONE","col_ADDRESS","col_ZIPCODE","col_WALKINHOURS","col_MATINFO","col_WHICHMAT","col_BUPRENORPHINE","col_NALTREXONE","col_METHADONE","col_PAYMENTOPTIONS","col_SERVICES","col_ADDITIONALINFORMATION","col_ADDITIONALNOTES","col_CERTIFICATIONDATE","col_DATASOURCES","current_request_elements","included_values_string","excluded_values_strings","toLegalURL","enableColumns","handleScroll","makeRequest","getApiOrigin","request_URL_from_params","visible_columns","replace","newVisibilities","Object","assign","scrollLeft","scrollTop","url","splitIllegal","site","options","bwn","bwon","beri","bsdm","vtrl","nxn","match","params","table_name","query","included_values","excluded_values","param","included_values_strings","pair","length","join","django_query","axios","get","then","res","data","objects","document","title","groups","sortingInfo","condition","sortingElement","query_url","Date","getMonth","getDate","getFullYear","onScroll","source_url","records_count","facility_type","source_range","name1","name2","name3","website1","website2","telehealth","phone1","phone2","phone3","street1","street2","city","state_usa","zipcode","walk_in_hours","mat_info","mat_avail","bu","nu","mu","bu_options","option","buu","showonlyfor","bum","bmw","db_field","nu_options","rpn","meth","mui","mm","mmw","dm","md","mc","pa","ccc","dvh","hs","mhs","pw","ta","additional_info","ref_notes","full_certification","id_dbhids_tad","ba_dbhids_tad","id_samhsa_ftloc","id_samhsa_otp","id_hfp_fqhc","oid","withRouter","mapboxgl","accessToken","Map","jqueryReady","mapboxReady","geocoderElement","globalData","markerList","myCircle","geocoder","plotMarkers","toggleSearchModal","clearMap","reloadMap","mapParams","param_values","replaceAll","destination_name","get_url","window","location","origin","generateRequestURL","on","searchResult","result","geometry","loc","distance","turf","longitude","latitude","units","dist","parseInt","maxDistance","data_","d","sitesInFocus","halfBound","Math","sqrt","c","coordinates","bbox","fitBounds","MapboxCircle","lat","lng","fillOpacity","addTo","siteCount","showSearchModal","dest_name","link_object","countFocus","i","tableInfo","_color","marker","Marker","color","setLngLat","setPopup","Popup","setHTML","JSON","stringify","container","mapContainer","center","zoom","addControl","NavigationControl","resize","MapboxGeocoder","onAdd","outerHTML","requestGeoData","remove","display","showSearchByAddress","overflow","for","width","dangerouslySetInnerHTML","__html","el","class","MapPage","mapKey","naming_dict","sitecodes_samhsa_ftloc","siterecs_samhsa_ftloc","siterecs_samhsa_otp","siterecs_dbhids_tad","siterecs_hfp_fqhc","siterecs_other_srcs","sites_all","Siterecs_dbhids_tads","getUrlParams","distanceChanged","toggleSearchByAddress","refresh","App","rel","sizes","content","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1bc3e0fe.chunk.js","sourcesContent":["import { Component } from \"react\"\n\n\nclass FilterOption extends Component {\n    constructor(props){\n        super(props)\n        this.render = this.render.bind(this);\n        this.state = {\n            toggleState: 0\n        }\n        this.toggleAffirmative = this.toggleAffirmative.bind(this);\n        this.toggleNegative = this.toggleNegative.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.clear = this.clear.bind(this);\n    }\n\n    toggleAffirmative(){\n        var newState = 0\n        if(this.state.toggleState != 1){\n            newState = 1\n        }\n        this.state.toggleState = newState\n        this.props.applyFilters()\n    }\n    toggleNegative(){\n        var newState = 0\n        if(this.state.toggleState != -1){\n            newState = -1\n        }\n        this.state.toggleState = newState\n        this.props.applyFilters()\n    }\n    getValue(){\n        if(this.state.toggleState == 1){\n            console.log(this.props)\n            return this.props.affirmativeValue\n        }\n        if(this.state.toggleState == -1){\n            return this.props.negativeValue\n        }\n        return null\n    }\n\n    clear(){\n        this.state.toggleState = 0\n    }\n\n    render(){\n        return(\n            <div className=\"filterCriteria\">\n                <label>{this.props.label}</label>\n                <div className={\"specifier equal\" + (this.state.toggleState==1 ? \" selected\" : \"\")} onClick={this.toggleAffirmative}><p>✓</p></div>\n                <div className={\"specifier notequal\" + (this.state.toggleState==-1 ? \" selected\" : \"\")} onClick={this.toggleNegative}><p>✗</p></div>\n            </div>\n        )\n    }\n}\n\nexport default FilterOption\n","import React, { Component } from \"react\"\nimport FilterOption from \"./FilterOption\"\n\nclass FilterGroup extends Component {\n    constructor(props){\n        super(props)\n        this.render = this.render.bind(this)\n        this.state = {\n        }\n        this.clear = this.clear.bind(this)\n    }\n\n    componentDidMount(){\n        \n    }\n\n    clear(){\n        for(var filterOption of this.props.filters){\n            filterOption.ref.current.clear()\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"filterGroup\">\n                <div className=\"filterGroupHeader\">{this.props.name}:</div>\n                <div className=\"subfilter visible\">\n                    {this.props.filters.map((filter) => \n                        <FilterOption label={filter.label} key={filter.label} affirmativeValue={filter.affirmativeValue} negativeValue={filter.negativeValue} ref={filter.ref} applyFilters={this.props.applyFilters}/>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FilterGroup\n","import React, { Component } from \"react\"\n\nimport FilterGroup from \"./FilterGroup\";\n\nimport \"../styles/filterBar.css\"\n\nclass FilterBar extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            filterGroups: [],\n            keyword: \"\",\n            sortKeys: \"\",\n            sortDirection: \"\"\n        }\n        this.render = this.render.bind(this)\n        this.clear = this.clear.bind(this)\n        this.applyFilters = this.applyFilters.bind(this)\n        this.setDirection = this.setDirection.bind(this)\n        this.setSorting = this.setSorting.bind(this)\n        this.handleKeyDown = this.handleKeyDown.bind(this)\n    }\n\n    componentDidMount(){\n        var raw_filter_rows = []\n        for(var row of this.props.table_filters_raw.split(\"|\").slice(1)){\n            raw_filter_rows.push(row.split(\";\"))\n        }\n        var filtersByGroup = {}\n        for(var row of raw_filter_rows){\n            if(row[5] + row[6] !== \"\"){\n                var filter = { label: row[2], affirmativeValue: row[5], negativeValue: row[6], ref: React.createRef() }\n                if(row[1] in filtersByGroup){\n                    filtersByGroup[row[1]].push(filter)\n                } else{\n                    filtersByGroup[row[1]] = [filter]\n                }\n            }\n        }\n        var sortedFilterGroupNames = []\n        for(var row of raw_filter_rows.sort(function(a, b) { return a[0] - b[0] })){\n            if(!sortedFilterGroupNames.includes(row[1])){\n                sortedFilterGroupNames.push(row[1])\n            }\n        }\n        var sortedFilterGroups = []\n        for(var name of sortedFilterGroupNames){\n            sortedFilterGroups.push({name: name, filters: filtersByGroup[name], ref: React.createRef()})\n        }\n        this.setState({filterGroups: sortedFilterGroups});\n    }\n\n    clear(){\n        for(var group of this.state.filterGroups){\n            group.ref.current.clear()\n        }\n        this.applyFilters()\n    }\n\n    applyFilters(){\n        this.props.applyFilters(this.state.filterGroups, {keys: this.state.sortKeys, direction: this.state.sortDirection}, this.state.keyword)\n    }\n\n    setSorting(e){\n        this.state.sortKeys = e.target.value\n        this.applyFilters()\n    }\n\n    setDirection(e){\n        this.state.sortKeys = e.target.value\n        this.applyFilters()\n    }\n\n    handleKeyDown(e){\n        this.state.keyword = e.target.value\n        if(e.key === \"Enter\"){\n            this.applyFilters()\n        }\n    }\n\n    render(){\n        return(\n            <div id=\"sidebar\">\n                <button id=\"clearFilters\" onClick={this.clear}>Start Over &#10005;</button>\n                <div id=\"filterOptions\">\n                    <h2>Search:</h2>\n                    <input id=\"searchBar\" type=\"text\" placeholder=\"Search...\" onKeyDown={this.handleKeyDown}/>\n                    {this.props.children}\n                    { this.props.showSort !== false ? (\n                        <div>\n                            <h2>Sort:</h2>\n                            <div id=\"sortOptions\">\n                                <label>By:</label>\n                                <select id=\"sortBy\" defaultValue=\"\" onChange={this.setSorting}>\n                                    <option disabled hidden value=\"\"></option>\n                                    <option value=\"order=name1\">Facility Name</option>\n                                    <option value=\"order=street1&order=street2\">Address</option>\n                                    <option value=\"order=city\">City</option>\n                                    <option value=\"order=state_usa&order=city\">State</option>\n                                    <option value=\"order=zipcode\">Zip Code</option>\n                                </select>\n                                <label>Order:</label>\n                                <select id=\"orderingOptions\" defaultValue=\"\" onChange={this.setDirection}>\n                                    <option value=\"\">Ascending</option>\n                                    <option value=\"-\">Descending</option>\n                                </select>\n                            </div>\n                        </div>\n                    ) : null}\n                    <h2>Filter:</h2>\n                    <label>Filter your search with the following criteria:</label>\n                    <div id=\"filterContainer\">\n                        {this.state.filterGroups.map((group) => <FilterGroup applyFilters={this.applyFilters} name={group.name} key={group.name} filters={group.filters} ref={group.ref}/>)}\n                    </div>\n                </div>\n            </div>\n      )\n    }\n}\n\nexport default FilterBar\n","export default __webpack_public_path__ + \"static/media/MM_infinity-logo_luxwhite_labeled.d5261545.png\";","import { Component } from \"react\"\n\nimport \"../styles/navBar.css\"\nimport logo from \"../images/MM_infinity-logo_luxwhite_labeled.png\"\n\nclass NavBar extends Component {\n    constructor(props){\n        super(props)\n        this.render = this.render.bind(this);\n    }\n\n    componentDidMount(){\n        // const page_type = window.location.pathname.split(\"/\").filter(e => e != \"\")[0]\n        // const table_name = window.location.pathname.split(\"/\").filter(e => e != \"\")[1]\n        // for(var navItem of document.querySelectorAll(\"#nav-options li\")){\n        //     var linkUrl = navItem.querySelector(\"a\").getAttribute(\"href\")\n        //     var pathnameWithoutFilters = \"/\" + page_type + \"/\" + table_name\n        //     if(linkUrl == pathnameWithoutFilters){\n        //     navItem.classList.add(\"selected\")\n        //     }\n        // }\n    }\n\n    render(){\n        return(\n            <nav>\n                <a href=\"/\" id=\"nav-logo\" style={{ backgroundImage: `url(${logo})`}}> </a>\n                <ul id=\"nav-options\">\n                    <li className=\"bold\"><a href=\"/map/sites_all\">MAP ALL</a></li>\n                    <li className=\"bold\"><a href=\"/table/sites_all\">LIST ALL</a></li>\n                    <div className=\"linebreak\"></div>\n                    <li><a href=\"/table/siterecs_dbhids_tad\">Local MAT Directory (DBHIDS)</a></li>\n                    <li><a href=\"/table/siterecs_samhsa_ftloc\">National Find Treatment Programs (SAMHSA)</a></li>\n                    <li><a href=\"/table/siterecs_samhsa_otp\">Opioid Treatment Programs (SAMHSA)</a></li>\n                </ul>\n            </nav>\n      )\n    }\n}\n\nexport default NavBar\n","import { Component } from \"react\"\n\n\nclass TableCell extends Component {\n    constructor(props){\n        super(props)\n        this.render = this.render.bind(this);\n        this.state = {\n            visibility: false\n        }\n    }\n\n    componentDidMount(){\n        var column_name = null;\n        for(var name of this.props.className.split(\" \")){\n            if(name.substring(0,4) == \"col_\"){\n                column_name = name\n            }\n        }\n        this.setState({visibility: this.props.visibility[column_name]})\n    }\n\n    render(){\n        var sticking;\n        if(!this.props.sticking){\n            sticking = {top: false, left: false}\n        } else {\n            sticking = this.props.sticking\n        }\n        return(\n            <>{ this.state.visibility ? \n                <>{ this.props.isHeader ? \n                    <th className={this.props.className + (sticking.top ? \" stuck\" : \"\")}>{ this.props.children }</th>\n                    : <td className={this.props.className + (sticking.left ? \" stuck\" : \"\")}>{ this.props.children }</td>\n                }</>\n            : null}</>\n        )\n    }\n}\n\nexport default TableCell\n","import { Component } from \"react\"\nimport {withRouter} from 'react-router-dom'\nimport axios from \"axios\"\n\nimport FilterBar from \"../components/FilterBar.js\"\nimport NavBar from \"../components/NavBar.js\"\nimport TableCell from \"../components/TableCell.js\"\n\nimport \"../styles/table.css\"\n\nclass TablePage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            table_info: {\n                display_name: \"\",\n                display_cols: \"\",\n                update_recency: 0\n            },\n            isLoaded: false,\n            tableScroll: {\n                x: null,\n                y: null\n            },\n            sticking: {\n                top: false,\n                left: false\n            },\n            column_visibility: {\n                col_FACILITY: false,\n                col_TELEHEALTH: false,\n                col_PHONE: false,\n                col_ADDRESS: false,\n                col_ZIPCODE: false,\n                col_WALKINHOURS: false,\n                col_MATINFO: false,\n                col_WHICHMAT: false,\n                col_BUPRENORPHINE: false,\n                col_NALTREXONE: false,\n                col_METHADONE: false,\n                col_PAYMENTOPTIONS: false,\n                col_SERVICES: false,\n                col_ADDITIONALINFORMATION: false,\n                col_ADDITIONALNOTES: false,\n                col_CERTIFICATIONDATE: false,\n                col_DATASOURCES: false\n            },\n            current_request_elements: {\n                keyword: \"\",\n                included_values_string: \"None\",\n                excluded_values_strings: \"None\"\n            }\n        }\n        this.render = this.render.bind(this)\n        this.toLegalURL = this.toLegalURL.bind(this)\n        this.enableColumns = this.enableColumns.bind(this)\n        this.handleScroll = this.handleScroll.bind(this)\n        this.makeRequest = this.makeRequest.bind(this)\n        this.applyFilters = this.applyFilters.bind(this)\n        this.getApiOrigin = this.getApiOrigin.bind(this)\n    }\n\n    getApiOrigin(){\n        // if(window.location.origin.includes(\"localhost\") && !(window.location.origin.includes(\":8000\"))){\n            return \"\"\n        // }\n        // else {\n            // return window.location.origin\n        // }\n    }\n\n    componentDidMount(){\n        this.makeRequest(this.request_URL_from_params())\n    }\n\n    enableColumns(){\n        var visible_columns = this.state.table_info.display_cols.replace(/\\\"|\\[|\\]|\\s|\\(|\\)/g,\"\").split(\";\")\n        var newVisibilities = {}\n        Object.assign(this.state.column_visibility, newVisibilities)\n        for(var name of visible_columns){\n            newVisibilities[\"col_\"+name] = true\n        }\n        this.setState({column_visibility: newVisibilities})\n    }\n\n    handleScroll(e){\n        var sticking = {top: false, left: false}\n        if(e.target.scrollLeft > 0){\n            sticking.left = true\n        }\n        if(e.target.scrollTop > 0){\n            sticking.top = true\n        }\n        if(this.state.sticking.left !== sticking.left || this.state.sticking.top !== sticking.top){\n            this.setState({sticking: sticking})\n        }\n    }\n\n    toLegalURL(url){\n        if(url === null){\n            return \"\"\n        }\n        var splitIllegal = url.split(\":\")\n        if(splitIllegal[0] === \"https\" || splitIllegal[0] === \"http\"){\n            return url\n        }\n        else {\n            return \"//\" + url\n        }\n    }\n\n    bu_options(site){\n        var options = []\n        if(site.bwn){\n            options.push(\"With naloxone (ex. Suboxone)\")\n        }\n        if(site.bwon){\n            options.push(\"Without naloxone\")\n        }\n        if(site.beri){\n            options.push(\"Injectable extended-release (ex. Sublocade)\")\n        }\n        if(site.bsdm){\n            options.push(\"Sub-dermal implant (Probuphine)\")\n        }\n        return options;\n    }\n\n    nu_options(site){\n        var options = [];\n        if(site.vtrl){\n            options.push(\"Vivitrol (injectable)\")\n        }\n        if(site.nxn){\n            options.push(\"Oral naltrexone\")\n        }\n        return options;\n    }\n\n    request_URL_from_params(){\n        var { table_name, query, keyword } = this.props.match.params\n        var included_values = []\n        var excluded_values = []\n        var keyword = \"\"\n        if(query){\n            for(var param of query.split(\"&\")){\n                if(param.split(\"=\")[0]==\"keyword\"){\n                    keyword = param.split(\"=\")[1]\n                }\n                else if(param.includes(\"!=\")){\n                    excluded_values.push({key: param.split(\"!=\")[0], value: param.split(\"!=\")[1]})\n                }\n                else {\n                    included_values.push({key: param.split(\"=\")[0], value: param.split(\"=\")[1]})\n                }\n            }\n        }\n        var included_values_strings = []\n        var excluded_values_strings = []\n        for(var pair of included_values){\n            included_values_strings.push(pair.key + \"=\" + pair.value)\n        }\n        for(var pair of excluded_values){\n            excluded_values_strings.push(pair.key + \"=\" + pair.value)\n        }\n        var django_query = `/headless/${table_name}/${included_values_strings.length > 0 ? included_values_strings.join(\"&\") : \"None\"}/${excluded_values_strings.length > 0 ? excluded_values_strings.join(\"&\") : \"None\"}${keyword.length > 0 ? \"/\"+keyword : \"\"}`\n        return django_query\n    }\n\n    makeRequest(django_query){\n        console.log(\"starting request\")\n        var keyword = (django_query.split(\"/\").length > 5 ? django_query.split(\"/\")[django_query.split(\"/\").length - 1] : \"\")\n        var excluded_values_strings = django_query.split(\"/\")[django_query.split(\"/\").length - 2]\n        var included_values_strings = django_query.split(\"/\")[django_query.split(\"/\").length - 3]\n        this.setState({current_request_elements: {keyword: keyword, included_values_string: included_values_strings, excluded_values_strings: excluded_values_strings}})\n        axios.get(this.getApiOrigin() + django_query).then(res => {\n            const data = res.data\n            this.setState({ objects: data.objects, table_info: data.table_info})\n            document.title = this.state.table_info.display_name\n            this.enableColumns()\n            this.setState({isLoaded: true})\n            console.log(\"request completed\")\n        })\n    }\n\n    applyFilters(groups, sortingInfo, keyword){\n        var included_values = []\n        var excluded_values = []\n        for(var group of groups){\n            for(var filter of group.ref.current.props.filters){\n                if(filter.ref.current.getValue() != null){\n                    for(var condition of filter.ref.current.getValue().split(\"&\")){\n                        if(condition.includes(\"!=\")){\n                            excluded_values.push(condition.replace(\"!=\",\"=\"))\n                        }\n                        else {\n                            included_values.push(condition)\n                        }\n                    }\n                }\n            }\n        }\n        var sortingElement = (sortingInfo.direction == \"-\" ? sortingInfo.keys.replace(\"=\",\"=-\") : sortingInfo.keys)\n        var query_url = `/headless/${this.state.table_info.table_name}/${included_values.length > 0 ? included_values.join(\"&\") : \"None\"}/${excluded_values.length > 0 ? excluded_values.join(\"&\") : \"None\"}${keyword.length > 0 ? \"/\"+keyword : \"\"}${sortingInfo.keys.length > 0 ? \"/?\" + sortingElement : \"\"}`\n        console.log(query_url)\n        this.makeRequest(query_url)\n    }\n\n    render(){\n        console.log(this)\n        var a = new Date(this.state.table_info.update_recency * 1000)\n        var update_recency = (a.getMonth() + 1) + \"/\" + (a.getDate() + 1) + \"/\" + a.getFullYear()\n        if (this.state.isLoaded) {\n            return(\n                <div id=\"body\">\n                    <NavBar/>\n                    <div id=\"flexContainer\">\n                        <FilterBar applyFilters={this.applyFilters} table_filters_raw={this.state.table_info.filters}/>\n                        <div id=\"table\" onScroll={this.handleScroll}>\n                            <h5 id=\"resultDescription\">\n                                <span id=\"dataSource\" className=\"bold\">SOURCE: <a href={this.state.table_info.source_url} target=\"_blank\">{this.state.table_info.display_name}</a></span><br/>\n                                <span id=\"lastUpdatedNotice\">Most recent download: <span className=\"bold\">{update_recency}</span></span><br/>\n                                <span className=\"bold\">{this.state.objects.length}</span> of <span className=\"bold\">{this.state.table_info.records_count}</span> records for <span className=\"bold\">{this.state.table_info.facility_type}</span> {this.state.table_info.source_range}\n                            </h5>\n                            <div id=\"extraContainer\">\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <TableCell isHeader={true} className=\"facilityName col_FACILITY\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Facility</TableCell>\n                                    <TableCell isHeader={true} className=\"col_TELEHEALTH\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Telehealth</TableCell>\n                                    <TableCell isHeader={true} className=\"col_PHONE\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Phone</TableCell>\n                                    <TableCell isHeader={true} className=\"col_ADDRESS\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Address</TableCell>\n                                    <TableCell isHeader={true} className=\"col_ZIPCODE\" visibility={this.state.column_visibility} sticking={this.state.sticking}>ZIP Code</TableCell>\n                                    <TableCell isHeader={true} className=\"col_WALKINHOURS\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Walk-In Hours</TableCell>\n                                    <TableCell isHeader={true} className=\"col_MATINFO\" visibility={this.state.column_visibility} sticking={this.state.sticking}>MAT Info</TableCell>\n                                    <TableCell isHeader={true} className=\"col_WHICHMAT\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Which MAT</TableCell>\n                                    <TableCell isHeader={true} className=\"col_BUPRENORPHINE\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Buprenorphine</TableCell>\n                                    <TableCell isHeader={true} className=\"col_NALTREXONE\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Naltrexone</TableCell>\n                                    <TableCell isHeader={true} className=\"col_METHADONE\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Methadone</TableCell>\n                                    <TableCell isHeader={true} className=\"col_PAYMENTOPTIONS\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Payment Options</TableCell>\n                                    <TableCell isHeader={true} className=\"col_SERVICES\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Services</TableCell>\n                                    <TableCell isHeader={true} className=\"col_ADDITIONALINFORMATION\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Additional Information</TableCell>\n                                    <TableCell isHeader={true} className=\"col_ADDITIONALNOTES\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Additional Notes</TableCell>\n                                    <TableCell isHeader={true} className=\"col_CERTIFICATIONDATE\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Certification Date</TableCell>\n                                    <TableCell isHeader={true} className=\"col_DATASOURCES\" visibility={this.state.column_visibility} sticking={this.state.sticking}>Data Source(s)</TableCell>\n                                </tr>\n                                { this.state.objects.map((site) =>\n                                    <tr key={site.oid}>\n                                        <TableCell visibility={this.state.column_visibility} className=\"facilityName wrap col_FACILITY\" sticking={this.state.sticking}>\n                                            <p className=\"cellText bold\">{site.name1}</p>\n                                            <p className=\"cellText semibold\">{site.name2}</p>\n                                            <p className=\"cellText semibold\">{site.name3}</p>\n                                            <p className=\"cellText\"><a target=\"_blank\" href={this.toLegalURL(site.website1)}>{site.website1}</a></p>\n                                            <p className=\"cellText\"><a target=\"_blank\" href={this.toLegalURL(site.website2)}>{site.website2}</a></p>\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"nowrap col_TELEHEALTH\">\n                                            <p className=\"cellText\">\n                                                {site.telehealth ? \"Yes\" : \"No\"}\n                                            </p>\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"nowrap col_PHONE\">\n                                            <p className=\"cellText bold\">\n                                                {site.phone1}\n                                            </p>\n                                            <p className=\"cellText semibold\">\n                                                {site.phone2}\n                                            </p>\n                                            <p className=\"cellText semibold\">\n                                                {site.phone3}\n                                            </p>\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"nowrap col_ADDRESS\">\n                                            <p className=\"cellText bold\">\n                                                {site.street1}\n                                            </p>\n                                            {site.street2 && (\n                                                <p className=\"cellText\">\n                                                    {site.street2}\n                                                </p>\n                                            )}\n                                            <p className=\"cellText\">\n                                                {site.city}, {site.state_usa}\n                                            </p>\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"col_ZIPCODE\">\n                                            <p className=\"cellText bold\">{site.zipcode}</p>\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"col_WALKINHOURS\">\n                                            <p className=\"cellText bold\">{site.walk_in_hours}</p>\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"col_MATINFO\">\n                                            <p className=\"cellText bold\">{site.mat_info}</p>\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"nowrap col_WHICHMAT\">\n                                            <p className=\"cellText\">\n                                                {site.mat_avail === \"Unclear\" && <span>\"None confirmed\"<br/></span>}\n                                                Buprenorphine: <b>{ site.bu }</b><br/>\n                                                Naltrexone/Vivitrol: <b>{ site.nu }</b><br/>\n                                                Methadone: <b>{site.mu }</b>\n                                            </p>\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"nowrap col_BUPRENORPHINE\">\n                                            { site.bu ? \n                                            <span>\n                                                <p className=\"cellText\">\n                                                    Prescribed: <br/>\n                                                    <span className=\"bold\">\n                                                        {this.bu_options(site).map((option)=><span className=\"block\" key={option}>{option + \";\"}</span>)}\n                                                    </span>\n                                                </p>\n                                                <p>\n                                                    <span>\n                                                        {site.buu !== null &&\n                                                        <span>\n                                                            Used in treatment:\n                                                            <span className=\"bold\">\n                                                                {site.buu || site.bu ? \"Yes\" : \"No\"}\n                                                            </span>\n                                                            <br/>\n                                                        </span>\n                                                        }\n                                                    </span>\n                                                    <span showonlyfor=\"siterecs_samhsa_ftloc siterecs_dbhids_tad\">\n                                                        Maintenance:\n                                                        <span className=\"bold\">\n                                                            {site.bum ? \"Yes\" : \"No\"}\n                                                        </span>\n                                                    </span>\n                                                    <br/>\n                                                    <span>\n                                                        Maintenance for predetermined time:\n                                                        <span className=\"bold\">\n                                                            {site.bmw ? \"Yes\" : \"No\"}\n                                                        </span>\n                                                    </span>\n                                                    <br/>\n                                                    <span>\n                                                        Detoxification:\n                                                        <span className=\"bold\">\n                                                            {site.db_field ? \"Yes\" : \"No\"}\n                                                        </span>\n                                                    </span>\n                                                    <br/>\n                                                </p>\n                                            </span>\n                                            :\n                                            <p className=\"cellText\">Not available at this facility</p>\n                                            }\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"nowrap col_NALTREXONE\">\n                                            {site.nu ?\n                                                <p className=\"cellText\">\n                                                    {(site.vtrl || site.nxn) && \n                                                        <span>\n                                                            Prescribed:\n                                                            <span className=\"bold\">{this.nu_options(site).map((option)=><span className=\"block\" key={option}>{option + \";\"}</span>)}</span>\n                                                            <br/>\n                                                        </span>\n                                                    }\n                                                    Used for relapse prevention:\n                                                    <span className=\"bold\">\n                                                        {site.rpn ? \"Yes\" : \"No\"}\n                                                    </span>\n                                                </p>\n                                                :\n                                                <p className=\"cellText\">Not available at this facility</p>\n                                            }\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"nowrap col_METHADONE\"> \n                                            {site.mu ?\n                                                <p className=\"cellText\">\n                                                    {site.meth !== null &&\n                                                        <span>\n                                                            Prescribed:\n                                                            <span className=\"bold\">{site.meth}</span>\n                                                            <br/>\n                                                        </span>\n                                                    }\n                                                    Induction:\n                                                    <span className=\"bold\">\n                                                        {site.mui ? \"Yes\" : \"No\"}\n                                                    </span>\n                                                    <br/>\n                                                    Maintenance:\n                                                    <span className=\"bold\">\n                                                        {site.mm ? \"Yes\" : \"No\"}\n                                                    </span>\n                                                    <br/>\n                                                    Maintenance for predetermined time:\n                                                    <span className=\"bold\">\n                                                        {site.mmw ? \"Yes\" : \"No\"}\n                                                    </span>\n                                                    <br/>\n                                                    Detoxification:\n                                                    <span className=\"bold\">\n                                                        {site.dm ? \"Yes\" : \"No\"}\n                                                    </span>\n                                                </p>\n                                                :\n                                                <p className=\"cellText\">Not available at this facility</p>\n                                            }\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"nowrap col_PAYMENTOPTIONS\">\n                                            Medicaid: <b>{(site.md === true || site.md === \"Yes\") && \"Yes\"}{(site.md === false || site.md === \"No\") && \"No\"}{(site.md === \"Unclear\") && \"Unclear\"}</b><br/>\n                                            Medicare: <b>{(site.mc === true || site.mc === \"Yes\") && \"Yes\"}{(site.mc === false || site.mc === \"No\") && \"No\"}{(site.mc === \"Unclear\") && \"Unclear\"}</b><br/>\n                                            Payment assistance available: <b>{(site.pa === true || site.pa === \"Yes\") && \"Yes\"}{(site.pa === false || site.pa === \"No\") && \"No\"}{(site.pa === \"Unclear\") && \"Unclear\"}</b>\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"nowrap col_SERVICES\">\n                                        Child care: <b>{(site.ccc === true || site.ccc === \"Yes\") && \"Yes\"}{(site.ccc === false || site.ccc === \"No\") && \"No\"}{(site.ccc === \"Unclear\") && \"Unclear\"}</b><br/>\n                                        Domestic violence services: <b>{(site.dvh === true || site.dvh === \"Yes\") && \"Yes\"}{(site.dvh === false || site.dvh === \"No\") && \"No\"}{(site.dvh === \"Unclear\") && \"Unclear\"}</b><br/>\n                                        Housing services: <b>{(site.hs === true || site.hs === \"Yes\") && \"Yes\"}{(site.hs === false || site.hs === \"No\") && \"No\"}{(site.hs === \"Unclear\") && \"Unclear\"}</b><br/>\n                                        Mental health services: <b>{(site.mhs === true || site.mhs === \"Yes\") && \"Yes\"}{(site.mhs === false || site.mhs === \"No\") && \"No\"}{(site.mhs === \"Unclear\") && \"Unclear\"}</b><br/>\n                                        Pregnancy care: <b>{(site.pw === true || site.pw === \"Yes\") && \"Yes\"}{(site.pw === false || site.pw === \"No\") && \"No\"}{(site.pw === \"Unclear\") && \"Unclear\"}</b><br/>\n                                        Transportation assistance: <b>{(site.ta === true || site.ta === \"Yes\") && \"Yes\"}{(site.ta === false || site.ta === \"No\") && \"No\"}{(site.ta === \"Unclear\") && \"Unclear\"}</b>\n                                        </TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"col_ADDITIONALINFORMATION\">{ site.additional_info }</TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"col_ADDITIONALNOTES\">{ site.ref_notes }</TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"col_CERTIFICATIONDATE\">{ site.full_certification }</TableCell>\n                                        <TableCell visibility={this.state.column_visibility} className=\"nowrap col_DATASOURCES\">\n                                            {site.id_dbhids_tad && <span><a href=\"/table/siterecs_dbhids_tad\">DBHIDS MAT Directory</a><br/></span>}\n                                            {site.ba_dbhids_tad && <span>Bed Availability Updates<br/></span>}\n                                            {site.id_samhsa_ftloc && <span><a href=\"/table/siterecs_samhsa_ftloc\">SAMHSA Find Treatment</a><br/></span>}\n                                            {site.id_samhsa_otp && <span><a href=\"/table/siterecs_samhsa_otp\">SAMHSA OTPs Directory</a><br/></span>}\n                                            {site.id_hfp_fqhc && <span>HRSA or HFP (FQHCs)</span>}\n                                        </TableCell>\n                                    </tr>\n                                ) }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            )\n        } else{\n            return null\n        }\n    }\n}\n\nexport default withRouter(TablePage)\n","import React, { Component } from \"react\"\nimport ScriptTag from 'react-script-tag'\nimport $ from 'jquery'\nimport axios from 'axios'\nimport turf from '@turf/turf'\n\nimport mapboxgl from 'mapbox-gl'\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\n\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWF0Y2htYXBwZXIiLCJhIjoiY2tvMWJmZW9wMGtjdzMxb2k0NWhpeW0xMSJ9.ChZtypQ-p77nXwERIAt3Iw'\n\nclass Map extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      jqueryReady: false,\n      mapboxReady: false,\n      geocoderElement: null\n    }\n\n    this.globalData = {}\n    this.markerList = []\n    this.myCircle = null\n    this.geocoder = null\n\n    this.plotMarkers = this.plotMarkers.bind(this)\n    this.toggleSearchModal = this.toggleSearchModal.bind(this)\n    this.clearMap = this.clearMap.bind(this)\n    this.reloadMap = this.reloadMap.bind(this)\n  }\n\n  generateRequestURL(){\n    var mapParams = this.props.mapParams\n    var table_name = mapParams.table_name\n    var param_values = mapParams.included_values.replaceAll(\"amp;\", \"\")\n    var destination_name = mapParams.destination_name\n    var excluded_values = mapParams.excluded_values.replaceAll(\"amp;\", \"\")\n    var keyword = mapParams.keyword\n    \n    var get_url = \"/api/geodata/\";\n    get_url += table_name + \"/\";\n    \n    if (param_values != \"\" && param_values != \"None\") {\n        get_url += param_values + \"&archival_only=False/\"\n    }\n    else {\n        get_url += \"archival_only=False/\"\n    }\n    if (excluded_values != \"None\" && excluded_values != \"\") {\n        get_url += excluded_values + \"/\"\n    }\n    if (keyword != \"\") { \n        if (excluded_values == \"None\" || excluded_values == \"\") { \n          get_url += \"None/\"\n        }\n        get_url += keyword\n    }\n    return get_url\n  }\n\n  requestGeoData(){\n    var url = window.location.origin + this.generateRequestURL()\n    axios.get(url).then(res => {\n      const data = res.data\n      this.globalData = data\n      console.log(data)\n      this.geocoder.on('result', ({ result }) => {\n        const searchResult = result.geometry\n        // Loop through sites and calculate distance to geocoder address\n        for (const loc of data.loc) {\n          loc.distance = turf.distance(searchResult, [loc.longitude, loc.latitude], { units: 'miles' })\n        }\n        // filter array by distance in field\n        const dist = parseInt(this.state.maxDistance) //get distance from text field\n        const data_ = data.loc.filter(d => d.distance < dist)\n        // get count of sites within radius\n        const sitesInFocus = data_.length\n        // find site with min distance\n        const closest = data_.sort((a, b) => {\n          if (a.distance > b.distance) {\n            return 1;\n          }\n          if (a.distance < b.distance) {\n            return -1;\n          }\n          return 0; // a must be equal to b\n        })[0]\n        // fit the map on the entered location and the closest site\n        // Create a bounding box using the dist variable and right triangle math\n        // keep is simple by using 69 miles = 1 degree\n        var halfBound = 2 * dist/(69*Math.sqrt(2));\n        const c = searchResult.coordinates;\n        const bbox = [[c[0] - halfBound, c[1] - halfBound], [c[0] + halfBound, c[1] + halfBound]];\n        this.map.fitBounds(bbox)//, {padding: 600});\n        // Draw circle of radius\n        this.myCircle = new mapboxgl.MapboxCircle({lat: c[1], lng: c[0]}, dist * 1610, {\n            fillOpacity: 0\n        }).addTo(this.map)\n        // Clear map and re-draw with different colors\n        this.markerList = this.clearMap(this.markerList);\n        this.plotMarkers(data, this.props.destination_name, sitesInFocus)\n        // Change record totals\n        this.setState({siteCount: sitesInFocus})\n      })\n\n      this.plotMarkers(data, this.props.destination_name);\n      this.setState({siteCount: data['loc'].length})\n    })\n  }\n\n  // function to toggle the search modal on and off\n  toggleSearchModal() {\n    this.setState({showSearchModal: !(this.state.showSearchModal)})\n  }\n\n  plotMarkers(data, dest_name, countFocus = data.length + 1) {\n    // sort data\n    data = data.loc.sort((a, b) => {\n        if (a.distance > b.distance) {\n            return 1;\n        }\n        if (a.distance < b.distance) {\n            return -1;\n        }\n        return 0; // a must be equal to b\n    });\n    \n    var link_object;\n    for (var i = 0; i < data.length; i++) {\n        link_object = window.location.origin + \"/table/\" + this.props.tableInfo.table_name + \"/oid=\" + data[i]['oid'] + \"/\";\n\n        // set color based on countFocus\n        if (i < countFocus) {\n            var _color = \"#2A76D2\"\n        } else {\n            var _color = \"#3FB1CE\"\n        }\n        var marker = new mapboxgl.Marker({color: _color})\n            .setLngLat([data[i]['longitude'], data[i]['latitude']])\n            .setPopup(new mapboxgl.Popup().setHTML(\"<a href=\" + link_object + \">\" + JSON.stringify(data[i][this.props.mapParams.destination_name]) + \"</a><br><a href='\" + data[i].website1 + \"'>Website</a><br>Phone: \" + data[i].phone1))\n            .addTo(this.map);\n        this.markerList.push(marker);\n    }\n  }\n\n  componentDidMount(){\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer, // container ID\n      style: 'mapbox://styles/matchmapper/ckog0go3v3k1417nn7gex8ebr',\n      center: [-75.158924, 39.9629223],\n      zoom: 11\n    })\n    this.map.addControl(new mapboxgl.NavigationControl())\n    this.map.on('render', function (e) {\n        e.target.resize()\n    })\n    this.geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl: mapboxgl, // Set the mapbox-gl instance\n      marker: false, // Use the geocoder's default marker style,\n      placeholder: \"Search for Site by Address\"\n    })\n    this.state.geocoderElement = this.geocoder.onAdd(this.map).outerHTML\n    this.requestGeoData()\n\n\n  }\n\n  // function to clear map\n  clearMap() {\n    for (var i = 0; i < this.markerList.length; i++ ) {\n        this.markerList[i].remove()\n    }\n    this.markerList = []\n  }\n\n  reloadMap() {\n      this.markerList = this.clearMap(this.markerList); \n      this.plotMarkers(this.globalData, this.props.destination_name); \n      this.myCircle.remove();\n      this.geocoder.clear();\n  }\n\n  render(){\n    return (\n      <div id=\"mapContainer\">\n        <div id=\"siteSearch\" style={{display: this.props.showSearchByAddress ? \"block\" : \"none\", overflow: \"visible\"}}>\n          <button id=\"closeSearchModal\" onClick={this.toggleSearchModal}>&#x2715;</button>\n          <h2>Search By Address:</h2>\n          <label for=\"distance\">Radius (mi.):  </label>\n          <input name=\"distance\" id=\"distance\" value=\"5\" type=\"number\" style={{width: 40}}></input>\n          <br/><br/>\n          <div id=\"geocodeWidget\" style={{width: \"calc(100% - 14px)\"}} dangerouslySetInnerHTML={{__html:this.state.geocoderElement}}></div>\n          <br/>\n          <button id=\"clearSearch\" onClick={this.reloadMap}>Start Over &#10005;</button>\n        </div> \n        <div id=\"map\" ref={el => this.mapContainer = el}>\n          {this.props.children}\n          <div id=\"results-info\">\n            <span className=\"bold\" id=\"sitecount\">{this.state.siteCount}</span> of <span class=\"bold\">{this.props.tableInfo.records_count}</span> records for <span class=\"bold\">{this.props.tableInfo.facility_type}</span> {this.props.tableInfo.source_range}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Map","import React, { Component } from \"react\"\nimport {withRouter} from 'react-router-dom'\nimport axios from \"axios\"\nimport ScriptTag from 'react-script-tag'\nimport mapboxgl from 'mapbox-gl'\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\n\nimport FilterBar from \"../components/FilterBar.js\"\nimport NavBar from \"../components/NavBar.js\"\nimport Map from \"../components/Map.js\"\n\nimport \"../styles/map.css\"\nimport 'mapbox-gl/dist/mapbox-gl.css'\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWF0Y2htYXBwZXIiLCJhIjoiY2tvMWJmZW9wMGtjdzMxb2k0NWhpeW0xMSJ9.ChZtypQ-p77nXwERIAt3Iw'\n\nclass MapPage extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            table_info: {\n                display_name: \"\",\n                display_cols: \"\"\n            },\n            isLoaded: false,\n            tableScroll: {\n                x: null,\n                y: null\n            },\n            sticking: {\n                top: false,\n                left: false\n            },\n            column_visibility: {\n                col_FACILITY: false,\n                col_TELEHEALTH: false,\n                col_PHONE: false,\n                col_ADDRESS: false,\n                col_ZIPCODE: false,\n                col_WALKINHOURS: false,\n                col_MATINFO: false,\n                col_WHICHMAT: false,\n                col_BUPRENORPHINE: false,\n                col_NALTREXONE: false,\n                col_METHADONE: false,\n                col_PAYMENTOPTIONS: false,\n                col_SERVICES: false,\n                col_ADDITIONALINFORMATION: false,\n                col_ADDITIONALNOTES: false,\n                col_CERTIFICATIONDATE: false,\n                col_DATASOURCES: false\n            },\n            current_request_elements: {\n                keyword: \"\",\n                included_values_string: \"None\",\n                excluded_values_strings: \"None\"\n            },\n            mapParams: {\n                table_name: \"\",\n                included_values: \"None\",\n                excluded_values: \"None\",\n                keyword: \"\",\n                destination_name: \"name1\"\n            },\n            mapKey: 0,\n            maxDistance: \"5\",\n            showSearchByAddress: false\n        }\n        this.naming_dict = { \n            sitecodes_samhsa_ftloc : \"service_name\",\n            siterecs_samhsa_ftloc : \"name1\",\n            siterecs_samhsa_otp: \"program_name\",\n            siterecs_dbhids_tad: \"name1\", \n            ba_dbhids_tad: \"name_ba\", \n            siterecs_hfp_fqhc: \"name_short\", \n            siterecs_other_srcs : \"name1\", \n            sites_all : \"name1\",\n            Siterecs_dbhids_tads: \"name1\"\n        }\n        this.map = React.createRef()\n        this.render = this.render.bind(this)\n        this.getUrlParams = this.getUrlParams.bind(this)\n        this.makeRequest = this.makeRequest.bind(this)\n        this.request_URL_from_params = this.request_URL_from_params.bind(this)\n        this.applyFilters = this.applyFilters.bind(this)\n        this.distanceChanged = this.distanceChanged.bind(this)\n        this.toggleSearchByAddress = this.toggleSearchByAddress.bind(this)\n    }\n\n    componentDidMount(){\n        this.getUrlParams()\n        this.makeRequest(this.request_URL_from_params())\n    }\n\n    request_URL_from_params(){\n        var { table_name, query, keyword } = this.props.match.params\n        var included_values = []\n        var excluded_values = []\n        var keyword = \"\"\n        if(query){\n            for(var param of query.split(\"&\")){\n                if(param.split(\"=\")[0]==\"keyword\"){\n                    keyword = param.split(\"=\")[1]\n                }\n                else if(param.includes(\"!=\")){\n                    excluded_values.push({key: param.split(\"!=\")[0], value: param.split(\"!=\")[1]})\n                }\n                else {\n                    included_values.push({key: param.split(\"=\")[0], value: param.split(\"=\")[1]})\n                }\n            }\n        }\n        var included_values_strings = []\n        var excluded_values_strings = []\n        for(var pair of included_values){\n            included_values_strings.push(pair.key + \"=\" + pair.value)\n        }\n        for(var pair of excluded_values){\n            excluded_values_strings.push(pair.key + \"=\" + pair.value)\n        }\n        var django_query = `/headless/${table_name}/${included_values_strings.length > 0 ? included_values_strings.join(\"&\") : \"None\"}/${excluded_values_strings.length > 0 ? excluded_values_strings.join(\"&\") : \"None\"}${keyword.length > 0 ? \"/\"+keyword : \"\"}`\n        return django_query\n    }\n\n    makeRequest(django_query, refresh){\n        console.log(\"starting request\")\n        var keyword = (django_query.split(\"/\").length > 5 ? django_query.split(\"/\")[django_query.split(\"/\").length - 1] : \"\")\n        var excluded_values_strings = django_query.split(\"/\")[django_query.split(\"/\").length - 2]\n        var included_values_strings = django_query.split(\"/\")[django_query.split(\"/\").length - 3]\n        this.setState({current_request_elements: {keyword: keyword, included_values_string: included_values_strings, excluded_values_strings: excluded_values_strings}})\n        axios.get(django_query).then(res => {\n            const data = res.data\n            this.setState({ objects: data.objects, table_info: data.table_info},()=>console.log(this.state.table_info))\n            document.title = this.state.table_info.display_name\n            this.setState({isLoaded: true})\n            if(refresh){\n                this.setState({mapKey: this.state.mapKey + 1})\n            }\n            console.log(\"request completed\")\n        })\n    }\n\n    getUrlParams(){\n        var { table_name, query, keyword } = this.props.match.params\n        var included_values = []\n        var excluded_values = []\n        var keyword = \"\"\n        if(query){\n            for(var param of query.split(\"&\")){\n                if(param.split(\"=\")[0]==\"keyword\"){\n                    keyword = param.split(\"=\")[1]\n                }\n                else if(param.includes(\"!=\")){\n                    excluded_values.push({key: param.split(\"!=\")[0], value: param.split(\"!=\")[1]})\n                }\n                else {\n                    included_values.push({key: param.split(\"=\")[0], value: param.split(\"=\")[1]})\n                }\n            }\n        }\n        var included_values_strings = []\n        var excluded_values_strings = []\n        for(var pair of included_values){\n            included_values_strings.push(pair.key + \"=\" + pair.value)\n        }\n        for(var pair of excluded_values){\n            excluded_values_strings.push(pair.key + \"=\" + pair.value)\n        }\n        this.setState({\n            mapParams: {\n                table_name: table_name,\n                included_values: included_values_strings.length > 0 ? included_values_strings.join(\"&\") : \"None\",\n                excluded_values: excluded_values_strings.length > 0 ? excluded_values_strings.join(\"&\") : \"None\",\n                keyword: keyword.length > 0 ? keyword : \"\",\n                destination_name: this.naming_dict[table_name]\n            }\n        })\n    }\n\n    applyFilters(groups, sortingInfo, keyword){\n        var included_values = []\n        var excluded_values = []\n        for(var group of groups){\n            for(var filter of group.ref.current.props.filters){\n                if(filter.ref.current.getValue() != null){\n                    for(var condition of filter.ref.current.getValue().split(\"&\")){\n                        if(condition.includes(\"!=\")){\n                            excluded_values.push(condition.replace(\"!=\",\"=\"))\n                        }\n                        else {\n                            included_values.push(condition)\n                        }\n                    }\n                }\n            }\n        }\n        var sortingElement = (sortingInfo.direction == \"-\" ? sortingInfo.keys.replace(\"=\",\"=-\") : sortingInfo.keys)\n        var query_url = `/headless/${this.state.table_info.table_name}/${included_values.length > 0 ? included_values.join(\"&\") : \"None\"}/${excluded_values.length > 0 ? excluded_values.join(\"&\") : \"None\"}${keyword.length > 0 ? \"/\"+keyword : \"\"}${sortingInfo.keys.length > 0 ? \"/?\" + sortingElement : \"\"}`\n        // console.log(query_url)\n        this.makeRequest(query_url, true)\n        this.setState({\n            mapParams: {\n                table_name: this.state.table_info.table_name,\n                included_values: included_values.length > 0 ? included_values.join(\"&\") : \"None\",\n                excluded_values: excluded_values.length > 0 ? excluded_values.join(\"&\") : \"None\",\n                keyword: keyword.length > 0 ? \"/\"+keyword : \"\",\n                destination_name: this.naming_dict[this.state.table_info.table_name]\n            }\n        }, function(){\n            console.log(this.state.mapParams)\n            this.map.current.clearMap()\n            this.map.current.requestGeoData()\n        })\n    }\n\n    distanceChanged(e){\n        this.setState({maxDistance: e.target.value})\n    }\n\n    toggleSearchByAddress(){\n        this.setState({showSearchByAddress: !(this.state.showSearchByAddress)})\n    }\n\n    render(){\n        if(this.state.isLoaded){\n            console.log(this.map)\n            return(\n                <div id=\"body\">\n                    <NavBar/>\n                    <Map mapParams={this.state.mapParams} tableInfo={this.state.table_info} ref={this.map} showSearchByAddress={this.state.showSearchByAddress}>\n                        <FilterBar applyFilters={this.applyFilters} table_filters_raw={this.state.table_info.filters} showSort={false}>\n                            {/* <button onClick={this.toggleSearchByAddress}>Show distance search</button> */}\n                        </FilterBar>\n                    </Map>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nexport default withRouter(MapPage)\n","import React from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\n\nimport TablePage from \"./pages/table.js\"\nimport MapPage from \"./pages/map.js\"\n\nfunction App() {\n  return (\n    <div>\n      <div id=\"resources\">\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/static/images/apple-touch-icon.png\"/>\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/static/images/favicon-32x32.png\"/>\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/static/images/favicon-16x16.png\"/>\n        <link rel=\"manifest\" href=\"/static/images/site.webmanifest\"/>\n        <link rel=\"mask-icon\" href=\"/static/images/safari-pinned-tab.svg\" color=\"#0f4d90\"/>\n        <link rel=\"shortcut icon\" href=\"/static/images/favicon.ico\"/>\n        <meta name=\"msapplication-TileColor\" content=\"#2b5797\"/>\n        <meta name=\"msapplication-config\" content=\"/static/images/browserconfig.xml\"/>\n        <meta name=\"theme-color\" content=\"#ffffff\"/>\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"/>\n        <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\"/>\n      </div>\n      <Router>\n      <Switch>\n        <Route path=\"/table/:table_name/:query?\">\n          <TablePage/>\n        </Route>\n        <Route path=\"/map/:table_name/:query?\">\n          <MapPage/>\n        </Route>\n      </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}